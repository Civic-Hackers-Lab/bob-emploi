syntax = "proto3";

import "google/protobuf/timestamp.proto";

import "bob_emploi/frontend/api/user.proto";

package bayes.bob;


message UseCasePoolNames {
  // A sorted list of names of use case groups. The ones available in the db to be fetch.
  repeated string use_case_pool_names = 1;
}

message UseCases {
  // A list of anonymized user examples.
  repeated UseCase use_cases = 1;

  // A list of anonymized user examples.
  // DEPRECATED: use the renamed field above when it is set.
  // TODO(pascal): Clean up when this has been live for few days.
  repeated UseCase new_use_cases = 2 [deprecated = true];
}

message UseCasePool {
  string name = 1;
}

message UseCase {
  // Unique use case ID.
  string use_case_id = 1;

  // Name of the use case pool it is part of, if any.
  string pool_name = 2;

  // Index of this use case in its pool.
  int32 index_in_pool = 3;

  // Title of the use case, e.g. "Baker in Rennes";
  string title = 4;

  // Actual user data.
  User user_data = 5;

  // The evaluation for this use case.
  UseCaseEvaluation evaluation = 6;
}

message UseCaseEvaluation {
  // When the evaluation was done.
  google.protobuf.Timestamp evaluated_at = 1;

  // General score for this use case.
  UseCaseScore score = 2;

  // General comments for this use case.
  string comments = 3;

  // New score for advice modules.
  map<string, int32> modules = 4;
}

enum UseCaseScore {
  UNKOWN_EVALUATION = 0;
  EXCELLENT = 1;
  GOOD_ENOUGH = 2;
  BAD = 3;
}

message UseCaseCreateRequest {
  // Email of the user to create the use case from.
  string email = 1;

  // Name of the pool in which to add the use case.
  string pool_name = 2;
}
